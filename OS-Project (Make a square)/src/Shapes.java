public class Shapes {
    int[][][][] arr = new int[4][4][4][2];// number of shape, rotates, blocks, coordinates
    int[][] grid = new int[4][4];

    public void pre() {
        for (int i = 0; i < 4; i++) {
            for (int k = 0; k < 4; k++) {
                grid[i][k] = -1;
            }
        }
        /* Shape 0 rotate 0 */
        arr[0][0][0][0] = 0;
        arr[0][0][0][1] = 0;
        arr[0][0][1][0] = 1;
        arr[0][0][1][1] = 0;
        arr[0][0][2][0] = 2;
        arr[0][0][2][1] = 0;
        arr[0][0][3][0] = 2;
        arr[0][0][3][1] = -1;

        /* Shape 0 rotate 1 */
        arr[0][1][0][0] = 0;
        arr[0][1][0][1] = 0;
        arr[0][1][1][0] = 1;
        arr[0][1][1][1] = 0;
        arr[0][1][2][0] = 1;
        arr[0][1][2][1] = 1;
        arr[0][1][3][0] = 1;
        arr[0][1][3][1] = 2;

        /* Shape 0 rotate 2 */
        arr[0][2][0][0] = 0;
        arr[0][2][0][1] = 0;
        arr[0][2][1][0] = 0;
        arr[0][2][1][1] = 1;
        arr[0][2][2][0] = 1;
        arr[0][2][2][1] = 0;
        arr[0][2][3][0] = 2;
        arr[0][2][3][1] = 0;

        /* Shape 0 rotate 3 */
        arr[0][3][0][0] = 0;
        arr[0][3][0][1] = 0;
        arr[0][3][1][0] = 0;
        arr[0][3][1][1] = 1;
        arr[0][3][2][0] = 0;
        arr[0][3][2][1] = 2;
        arr[0][3][3][0] = 1;
        arr[0][3][3][1] = 2;

        /* Shape 1 rotate 0 */
        arr[1][0][0][0] = 0;
        arr[1][0][0][1] = 0;
        arr[1][0][1][0] = 0;
        arr[1][0][1][1] = 1;
        arr[1][0][2][0] = 0;
        arr[1][0][2][1] = 2;
        arr[1][0][3][0] = 1;
        arr[1][0][3][1] = 1;

        /* Shape 1 rotate 1 */
        arr[1][1][0][0] = 0;
        arr[1][1][0][1] = 0;
        arr[1][1][1][0] = 1;
        arr[1][1][1][1] = 0;
        arr[1][1][2][0] = 2;
        arr[1][1][2][1] = 0;
        arr[1][1][3][0] = 1;
        arr[1][1][3][1] = -1;

        /* Shape 1 rotate 2 */
        arr[1][2][0][0] = 0;
        arr[1][2][0][1] = 0;
        arr[1][2][1][0] = 1;
        arr[1][2][1][1] = 0;
        arr[1][2][2][0] = 1;
        arr[1][2][2][1] = 1;
        arr[1][2][3][0] = 1;
        arr[1][2][3][1] = -1;

        /* Shape 1 rotate 3 */
        arr[1][3][0][0] = 0;
        arr[1][3][0][1] = 0;
        arr[1][3][1][0] = 1;
        arr[1][3][1][1] = 0;
        arr[1][3][2][0] = 2;
        arr[1][3][2][1] = 0;
        arr[1][3][3][0] = 1;
        arr[1][3][3][1] = 1;

        /* Shape 2 rotate 0 */
        arr[2][0][0][0] = 0;
        arr[2][0][0][1] = 0;
        arr[2][0][1][0] = 0;
        arr[2][0][1][1] = 1;
        arr[2][0][2][0] = 1;
        arr[2][0][2][1] = 1;
        arr[2][0][3][0] = 1;
        arr[2][0][3][1] = 2;

        /* Shape 2 rotate 1 */
        arr[2][1][0][0] = 0;
        arr[2][1][0][1] = 0;
        arr[2][1][1][0] = 1;
        arr[2][1][1][1] = 0;
        arr[2][1][2][0] = 1;
        arr[2][1][2][1] = -1;
        arr[2][1][3][0] = 2;
        arr[2][1][3][1] = -1;

        /* Shape 3 rotate 0 */
        arr[3][0][0][0] = 0;
        arr[3][0][0][1] = 0;
        arr[3][0][1][0] = 0;
        arr[3][0][1][1] = 1;
        arr[3][0][2][0] = 1;
        arr[3][0][2][1] = 0;
        arr[3][0][3][0] = 1;
        arr[3][0][3][1] = -1;

        /* Shape 3 rotate 1 */
        arr[3][1][0][0] = 0;
        arr[3][1][0][1] = 0;
        arr[3][1][1][0] = 1;
        arr[3][1][1][1] = 0;
        arr[3][1][2][0] = 1;
        arr[3][1][2][1] = 1;
        arr[3][1][3][0] = 2;
        arr[3][1][3][1] = 1;
    }
}
